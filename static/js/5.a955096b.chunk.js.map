{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/Order.module.css"],"names":["Order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","key","style","textTransform","display","margin","border","padding","className","classes","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","order","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios","module","exports"],"mappings":"qNA4BeA,EAzBD,SAACC,GACX,IAAMC,EAAc,GACpB,IAAI,IAAIC,KAAkBF,EAAMC,YAC5BA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAIlC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BAAMC,IAAKD,EAAGJ,KACTM,MAAO,CAACC,cAAe,aACvBC,QAAQ,eACRC,OAAQ,UACRC,OAAQ,iBACRC,QAAQ,QACZP,EAAGJ,KANJ,KAMYI,EAAGH,OANf,QAQX,OACA,yBAAKW,UAAWC,IAAQlB,OACpB,2CAAiBO,EAAjB,KACA,qCAAU,uCAAaN,EAAMkB,MAAMC,QAAQ,O,gCCf7CC,E,4LAGEC,KAAKrB,MAAMsB,cAAcD,KAAKrB,MAAMuB,MAAOF,KAAKrB,MAAMwB,U,+BAItD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAUb,OATIL,KAAKrB,MAAM2B,UACXF,EAASJ,KAAKrB,MAAMyB,OAAOlB,KAAI,SAAAqB,GAAK,OAChC,kBAAC,EAAD,CACInB,IAAKmB,EAAMC,GACX5B,YAAa2B,EAAM3B,YACnBiB,OAAQU,EAAMV,YAInB,6BACFO,O,GAlBQK,aAqCNC,uBAfS,SAAAC,GACpB,MAAO,CACHP,OAAQO,EAAMJ,MAAMH,OACpBE,QAASK,EAAMJ,MAAMD,QACrBJ,MAAOS,EAAMC,KAAKV,MAClBC,OAAQQ,EAAMC,KAAKT,WAIA,SAAAU,GACvB,MAAO,CACHZ,cAAe,SAACC,EAAMC,GAAP,OAAkBU,EAASC,IAAoBZ,EAAMC,QAI7DO,CAA6CK,YAAiBhB,EAAQiB,O,mBC7CrFC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.a955096b.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst Order = (props) => {\r\n    const ingredients = [];\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        });\r\n    }\r\n    \r\n    const ingredientOutput = ingredients.map(ig=> {\r\n        return <span key={ig.name}\r\n                    style={{textTransform: 'capitalize',\r\n                    display:'inline-block', \r\n                    margin: '0px 8px',\r\n                    border: '1px solid #ccc',\r\n                    padding:'5px'\r\n            }}>{ig.name} ({ig.amount})</span>\r\n    })\r\n    return (\r\n    <div className={classes.Order}>\r\n        <p>Ingredients: {ingredientOutput} </p>\r\n        <p>Price: <strong>USD {props.price.toFixed(2)}</strong></p>\r\n    </div>);\r\n    };\r\n\r\nexport default Order;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Orders extends Component {\r\n    \r\n    componentDidMount(){\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render(){\r\n        let orders = <Spinner/>;\r\n        if(!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order \r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={+order.price}/>\r\n                ));\r\n        }\r\n        \r\n        return(<div>\r\n            {orders}\r\n        </div>);\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token,userId) => dispatch(actions.fetchOrders(token,userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__12Wud\"};"],"sourceRoot":""}